version: '3.8'

services:
  # Twin Gate API
  api:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=twin_gate
      - DB_USER=postgres
      - DB_PASSWORD=password
    depends_on:
      - postgresql
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - twin-gate-network

  # PostgreSQL Database
  postgresql:
    image: postgres:15-alpine
    container_name: twin-gate-postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=twin_gate
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    restart: unless-stopped
    networks:
      - twin-gate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - twin-gate-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - twin-gate-network

  # React Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://api:3001
      - VITE_TWIN3_API_URL=https://api.twin3.ai
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - twin-gate-network
    profiles:
      - frontend

  # Telegram Bot
  telegram-bot:
    build: ./telegram-bot
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://api:3001
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - twin-gate-network
    profiles:
      - bots

  # Discord Bot
  discord-bot:
    build: ./discord-bot
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://api:3001
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - twin-gate-network
    profiles:
      - bots

  # LINE Bot
  line-bot:
    build: ./line-bot
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - API_BASE_URL=http://api:3001
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - twin-gate-network
    profiles:
      - bots

  # pgAdmin (optional, for development)
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@twin-gate.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgresql
    restart: unless-stopped
    networks:
      - twin-gate-network
    profiles:
      - dev

volumes:
  postgresql_data:
  redis_data:

networks:
  twin-gate-network:
    driver: bridge
